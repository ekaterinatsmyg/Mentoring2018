@model AsyncTasks.Task3.Models.ProductViewModel

@{
    ViewBag.Title = @Model.Name;
    ViewData["originCost"] = Model.Cost;
}

<h2>Edit</h2>

@using (Html.BeginForm("EditProduct", "Product", new { originalCost = Model.Cost}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ProductViewModel</h4>
        <hr />
        <div class="form-group">
            @Html.HiddenFor(model => model.Id)
        </div>
        <div>
            @Html.Hidden("originCost", @Model.Cost)
        </div>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control", @Value = Model.Name }})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cost, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cost, new {htmlAttributes = new {@class = "form-control", @Value = Model.Cost } })
                @Html.ValidationMessageFor(model => model.Cost, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit" class="btn btn-default"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

